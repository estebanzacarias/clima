{"ast":null,"code":"var _jsxFileName = \"/home/estebanzacarias/mi-github/technical-test/src/components/Weather.js\";\nimport React from 'react';\n\nconst Weather = ({\n  result\n}) => {\n  const {\n    city,\n    list\n  } = result;\n  if (!city) return null;\n  const kelvin = 273.13;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card grey col s12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }\n  }, \"El clima de \", city.name, \" es: \"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 17\n    }\n  }, \"Clima Actual: \", list[0].weather[0].description), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 17\n    }\n  }, \"Temperatura Actual: \", parseFloat(list[0].main.temp - kelvin, 10).toFixed(2), \" \", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 96\n    }\n  }, \"\\u2103\")), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 17\n    }\n  }, \"Temperatura Maxima Actual: \", parseFloat(list[0].main.temp_max - kelvin, 10).toFixed(2), \" \", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 107\n    }\n  }, \"\\u2103\")), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }\n  }, \"Temperatura Minima Actual: \", parseFloat(list[0].main.temp_min - kelvin, 10).toFixed(2), \" \", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 107\n    }\n  }, \"\\u2103\")), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }, \"Clima de los proximo 5 d\\xEDas\"), list.slice(1, list.length - 0).map(day => /*#__PURE__*/React.createElement(\"div\", {\n    key: day.dt,\n    className: \"card white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 15\n    }\n  }, day.weather.slice(0, 1).map(clima => /*#__PURE__*/React.createElement(\"p\", {\n    key: clima.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 19\n    }\n  }, \"Clima: \", clima.description)), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }\n  }, \"Temperatura: \", parseFloat(day.main.temp - kelvin, 10).toFixed(2), \" \", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 85\n    }\n  }, \"\\u2103\")), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }\n  }, \"Temperatura Maxima: \", parseFloat(day.main.temp_max - kelvin, 10).toFixed(2), \" \", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 96\n    }\n  }, \"\\u2103\")), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }\n  }, \"Temperatura Minima: \", parseFloat(day.main.temp_min - kelvin, 10).toFixed(2), \" \", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 96\n    }\n  }, \"\\u2103\"))))));\n};\n\nexport default Weather;","map":{"version":3,"sources":["/home/estebanzacarias/mi-github/technical-test/src/components/Weather.js"],"names":["React","Weather","result","city","list","kelvin","name","weather","description","parseFloat","main","temp","toFixed","temp_max","temp_min","slice","length","map","day","dt","clima","id"],"mappings":"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","sourcesContent":["import React from 'react';\n\nconst Weather = ({result}) => {\n\n    const { city, list } = result;\n\n    if(!city) return null;\n\n    const kelvin = 273.13;\n\n    return (\n      <div className=\"card grey col s12\">\n         <div className=\"\">\n            <h5>El clima de {city.name} es: </h5>\n\n                <p>Clima Actual: {list[0].weather[0].description}</p>\n                <p>Temperatura Actual: {parseFloat(list[0].main.temp - kelvin, 10).toFixed(2)} <span>&#x2103;</span></p>\n                <p>Temperatura Maxima Actual: {parseFloat(list[0].main.temp_max - kelvin, 10).toFixed(2)} <span>&#x2103;</span></p>\n                <p>Temperatura Minima Actual: {parseFloat(list[0].main.temp_min - kelvin, 10).toFixed(2)} <span>&#x2103;</span></p>           \n\n            <h4>Clima de los proximo 5 d√≠as</h4>\n            {list.slice(1, list.length - 0).map(day => (\n              <div key={day.dt} className=\"card white\">\n                {day.weather.slice(0,1).map(clima => (\n                  <p key={clima.id}>Clima: {clima.description}</p>\n                ))}\n                <p>Temperatura: {parseFloat(day.main.temp - kelvin, 10).toFixed(2)} <span>&#x2103;</span></p>\n                <p>Temperatura Maxima: {parseFloat(day.main.temp_max - kelvin, 10).toFixed(2)} <span>&#x2103;</span></p>\n                <p>Temperatura Minima: {parseFloat(day.main.temp_min - kelvin, 10).toFixed(2)} <span>&#x2103;</span></p>\n              </div>\n            ))}\n         </div>\n      </div>\n    );\n}\n\nexport default Weather;"]},"metadata":{},"sourceType":"module"}